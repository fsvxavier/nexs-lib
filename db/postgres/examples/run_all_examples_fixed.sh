#!/bin/bash

# Script para executar todos os exemplos do PostgreSQL com termina√ß√£o for√ßada
# Este script executa todos os 10 exemplos dispon√≠veis:
# - basic: Opera√ß√µes b√°sicas de conex√£o e consulta
# - advanced: Configura√ß√µes avan√ßadas e recursos especiais
# - pool: Gerenciamento de pool de conex√µes
# - replicas: Opera√ß√µes com r√©plicas de leitura
# - transaction: Transa√ß√µes e rollbacks
# - batch: Opera√ß√µes em lote (batch)
# - copy: Opera√ß√µes COPY FROM/TO
# - hooks: Sistema de hooks para intercepta√ß√£o
# - listen_notify: LISTEN/NOTIFY para pub/sub
# - multitenant: Estrat√©gias de multi-tenancy
echo "=== Executando todos os exemplos do PostgreSQL ==="
echo "Total de exemplos: 10"

# Fun√ß√£o para executar um exemplo com timeout e termina√ß√£o for√ßada
run_example() {
    local dir=$1
    local name=$2
    local timeout=${3:-20}
    
    echo ""
    echo "========================================"
    echo "Executando: $name"
    echo "========================================"
    
    cd "$dir"
    
    if [ ! -f "main.go" ]; then
        echo "‚ùå Arquivo main.go n√£o encontrado em $dir"
        return 1
    fi
    
    echo "Compilando..."
    if ! go build -o "$(basename "$dir")" .; then
        echo "‚ùå Erro na compila√ß√£o"
        return 1
    fi
    
    echo "Executando (timeout: ${timeout}s)..."
    
    # Executar em background e capturar PID
    timeout ${timeout}s ./$(basename "$dir") &
    local pid=$!
    
    # Aguardar o processo terminar ou timeout
    wait $pid 2>/dev/null
    local exit_code=$?
    
    # For√ßar termina√ß√£o se necess√°rio
    if kill -0 $pid 2>/dev/null; then
        echo "For√ßando termina√ß√£o..."
        kill -TERM $pid 2>/dev/null
        sleep 1
        kill -KILL $pid 2>/dev/null
        exit_code=124
    fi
    
    if [ $exit_code -eq 124 ]; then
        echo "‚è∞ Exemplo finalizado por timeout (${timeout}s)"
    elif [ $exit_code -eq 0 ]; then
        echo "‚úÖ Exemplo conclu√≠do com sucesso"
    else
        echo "‚ùå Exemplo falhou com c√≥digo $exit_code"
    fi
    
    # Limpar bin√°rio
    rm -f "./$(basename "$dir")"
    
    cd ..
}

# Executar exemplos
BASE_DIR="/home/fabricioxavier/go/src/github.com/fsvxavier/nexs-lib/db/postgres/examples"
cd "$BASE_DIR"

# Verificar se todos os exemplos existem
echo "Verificando disponibilidade dos exemplos..."
EXAMPLES=("basic" "advanced" "pool" "replicas" "transaction" "batch" "copy" "hooks" "listen_notify" "multitenant")
MISSING=()

for example in "${EXAMPLES[@]}"; do
    if [ ! -d "./$example" ] || [ ! -f "./$example/main.go" ]; then
        MISSING+=("$example")
    fi
done

if [ ${#MISSING[@]} -gt 0 ]; then
    echo "‚ùå Exemplos faltando: ${MISSING[*]}"
    echo "Executando apenas os exemplos dispon√≠veis..."
else
    echo "‚úÖ Todos os 10 exemplos est√£o dispon√≠veis!"
fi

echo ""
echo "Executando exemplos b√°sicos..."
run_example "./basic" "Exemplo B√°sico" 10
run_example "./advanced" "Exemplo Avan√ßado" 15

echo ""
echo "Executando exemplos de conex√£o..."
run_example "./pool" "Exemplo Pool de Conex√µes" 10
run_example "./replicas" "Exemplo Read Replicas" 10

echo ""
echo "Executando exemplos de opera√ß√µes..."
run_example "./transaction" "Exemplo Transa√ß√µes" 15
run_example "./batch" "Exemplo Opera√ß√µes Batch" 20
run_example "./copy" "Exemplo Opera√ß√µes COPY" 15

echo ""
echo "Executando exemplos avan√ßados..."
run_example "./hooks" "Exemplo Sistema de Hooks" 20
run_example "./listen_notify" "Exemplo LISTEN/NOTIFY" 25
run_example "./multitenant" "Exemplo Multi-Tenancy" 20

echo ""
echo "========================================"
echo "Todos os exemplos foram executados!"
echo "========================================"
echo ""
echo "üìä Resumo dos exemplos executados:"
echo "  ‚úÖ B√°sico - Opera√ß√µes fundamentais"
echo "  ‚úÖ Avan√ßado - Configura√ß√µes avan√ßadas"
echo "  ‚úÖ Pool - Gerenciamento de conex√µes"
echo "  ‚úÖ Replicas - R√©plicas de leitura"
echo "  ‚úÖ Transaction - Transa√ß√µes e rollbacks"
echo "  ‚úÖ Batch - Opera√ß√µes em lote"
echo "  ‚úÖ Copy - Opera√ß√µes COPY FROM/TO"
echo "  ‚úÖ Hooks - Sistema de intercepta√ß√£o"
echo "  ‚úÖ Listen/Notify - Pub/Sub em tempo real"
echo "  ‚úÖ Multitenant - Estrat√©gias multi-tenant"
