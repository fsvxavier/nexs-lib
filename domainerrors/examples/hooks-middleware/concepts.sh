#!/bin/bash

# Simple demonstration of hooks and middleware concepts

echo "=== Conceitos B√°sicos: Hooks vs Middleware ==="
echo
echo "üìñ HOOKS s√£o usados para:"
echo "   ‚Ä¢ Reagir a eventos espec√≠ficos (event-driven)"
echo "   ‚Ä¢ Logging, auditoria, notifica√ß√µes"
echo "   ‚Ä¢ Side effects que N√ÉO modificam o erro"
echo "   ‚Ä¢ M√∫ltiplos hooks podem ser registrados para o mesmo evento"
echo
echo "üîß MIDDLEWARE √© usado para:"
echo "   ‚Ä¢ Transformar/enriquecer erros (processing pipeline)"
echo "   ‚Ä¢ Chain of responsibility pattern"
echo "   ‚Ä¢ Modificar o erro: adicionar metadados, contexto"
echo "   ‚Ä¢ Ordem importa: executados em sequ√™ncia"
echo
echo "‚ö° PIPELINE DE EXECU√á√ÉO:"
echo "   1. Erro criado"
echo "   2. Middleware chain executa (transforma erro)"
echo "   3. Hooks before_* executam (side effects)"
echo "   4. Processamento interno"
echo "   5. Hooks after_* executam (side effects)"
echo "   6. Erro final retornado"
echo
echo "üöÄ Para executar os exemplos:"
echo "   cd examples/hooks-middleware"
echo "   go run main.go advanced.go"
echo
echo "üåê Exemplos de i18n (Internacionaliza√ß√£o):"
echo "   cd examples/i18n-hook         # Hook de tradu√ß√£o"
echo "   go run main.go"
echo "   cd examples/i18n-middleware   # Middleware de tradu√ß√£o"
echo "   go run main.go"
echo
echo "üìö Para mais detalhes:"
echo "   ‚Ä¢ README.md - Documenta√ß√£o completa"
echo "   ‚Ä¢ patterns/ - Exemplos espec√≠ficos por padr√£o"
echo "   ‚Ä¢ main.go - Exemplos b√°sicos"
echo "   ‚Ä¢ advanced.go - Cen√°rios de produ√ß√£o"
echo "   ‚Ä¢ i18n-hook/ - Tradu√ß√£o usando hooks"
echo "   ‚Ä¢ i18n-middleware/ - Tradu√ß√£o usando middlewares"
