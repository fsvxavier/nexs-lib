#!/bin/bash

# Script para executar todos os exemplos do m√≥dulo IP
# Autor: Gerado automaticamente
# Data: $(date)

set -e  # Parar em caso de erro

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir cabe√ßalho
print_header() {
    echo -e "\n${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${CYAN}üöÄ $1${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# Fun√ß√£o para imprimir se√ß√£o
print_section() {
    echo -e "\n${PURPLE}üìã $1${NC}"
    echo -e "${PURPLE}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
}

# Fun√ß√£o para executar exemplo
run_example() {
    local dir=$1
    local name=$2
    local timeout=${3:-30}
    
    echo -e "\n${YELLOW}üîç Executando: $name${NC}"
    echo -e "${YELLOW}üìÅ Diret√≥rio: $dir${NC}"
    echo -e "${YELLOW}‚è±Ô∏è  Timeout: ${timeout}s${NC}\n"
    
    if [ -f "$dir/main.go" ]; then
        cd "$dir"
        if timeout "${timeout}s" go run main.go; then
            echo -e "\n${GREEN}‚úÖ $name - SUCESSO${NC}"
        else
            echo -e "\n${RED}‚ùå $name - FALHOU ou TIMEOUT${NC}"
        fi
        cd - > /dev/null
    else
        echo -e "${RED}‚ùå Arquivo main.go n√£o encontrado em $dir${NC}"
    fi
}

# Verificar se estamos no diret√≥rio correto
if [ ! -d "examples" ]; then
    # Tentar encontrar o diret√≥rio do m√≥dulo IP
    if [ -f "../go.mod" ] && [ -d "../examples" ]; then
        cd ..
    elif [ -f "../../go.mod" ] && [ -d "../../examples" ]; then
        cd ../..
    else
        echo -e "${RED}‚ùå Erro: Execute este script no diret√≥rio do m√≥dulo IP${NC}"
        echo -e "${YELLOW}üí° Uso: cd /caminho/para/nexs-lib/ip && ./run_all_examples.sh${NC}"
        exit 1
    fi
fi

# In√≠cio do script
print_header "NEXS-LIB IP MODULE - EXECU√á√ÉO DE TODOS OS EXEMPLOS"

echo -e "${CYAN}üì¶ M√≥dulo: nexs-lib/ip${NC}"
echo -e "${CYAN}üìÖ Data: $(date)${NC}"
echo -e "${CYAN}üë§ Usu√°rio: $(whoami)${NC}"
echo -e "${CYAN}üóÇÔ∏è  Diret√≥rio: $(pwd)${NC}"

# Verificar se Go est√° instalado
if ! command -v go &> /dev/null; then
    echo -e "\n${RED}‚ùå Go n√£o est√° instalado ou n√£o est√° no PATH${NC}"
    exit 1
fi

echo -e "\n${GREEN}‚úÖ Go version: $(go version)${NC}"

# Compilar o m√≥dulo primeiro
print_section "COMPILA√á√ÉO E VALIDA√á√ÉO"
echo -e "${YELLOW}üî® Compilando m√≥dulo...${NC}"
if go build ./...; then
    echo -e "${GREEN}‚úÖ Compila√ß√£o bem-sucedida${NC}"
else
    echo -e "${RED}‚ùå Falha na compila√ß√£o${NC}"
    exit 1
fi

# Verificar exemplos dispon√≠veis
print_section "EXEMPLOS DISPON√çVEIS"
echo -e "${CYAN}üìÅ Listando exemplos:${NC}\n"

examples_found=()
if [ -d "examples" ]; then
    for example_dir in examples/*/; do
        if [ -f "${example_dir}main.go" ]; then
            example_name=$(basename "$example_dir")
            examples_found+=("$example_name")
            echo -e "   ${GREEN}‚úì${NC} $example_name"
        fi
    done
else
    echo -e "${RED}‚ùå Diret√≥rio examples/ n√£o encontrado${NC}"
    exit 1
fi

if [ ${#examples_found[@]} -eq 0 ]; then
    echo -e "${RED}‚ùå Nenhum exemplo encontrado${NC}"
    exit 1
fi

echo -e "\n${CYAN}üìä Total de exemplos encontrados: ${#examples_found[@]}${NC}"

# Executar exemplos principais
print_section "EXECU√á√ÉO DOS EXEMPLOS PRINCIPAIS"

# 1. Exemplo B√°sico
run_example "examples/basic" "Exemplo B√°sico - Funcionalidades Core" 15

# 2. Uso Otimizado
run_example "examples/optimized_usage" "Uso Otimizado - Zero Allocation" 10

# 3. Detec√ß√£o Avan√ßada
run_example "examples/advanced-detection" "Detec√ß√£o Avan√ßada - VPN/Proxy/ASN" 15

# 4. Otimiza√ß√£o de Mem√≥ria
run_example "examples/memory-optimization" "Otimiza√ß√£o de Mem√≥ria - Object Pooling" 15

# 5. Seguran√ßa
run_example "examples/security" "Sistema de Seguran√ßa Avan√ßado" 10

# Executar exemplos de providers
print_section "EXECU√á√ÉO DOS EXEMPLOS DE PROVIDERS"

providers=("nethttp" "gin" "echo" "fiber" "fasthttp" "atreugo")
for provider in "${providers[@]}"; do
    provider_dir="examples/providers/$provider"
    if [ -f "$provider_dir/main.go" ]; then
        run_example "$provider_dir" "Provider: $provider" 10
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Provider $provider n√£o encontrado${NC}"
    fi
done

# Executar exemplos de middleware
print_section "EXECU√á√ÉO DOS EXEMPLOS DE MIDDLEWARE"

middleware_examples=("middleware" "security_middleware")
for middleware in "${middleware_examples[@]}"; do
    middleware_dir="examples/$middleware"
    if [ -f "$middleware_dir/main.go" ]; then
        run_example "$middleware_dir" "Middleware: $middleware" 10
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Middleware $middleware n√£o encontrado${NC}"
    fi
done

# Executar testes r√°pidos para valida√ß√£o
print_section "VALIDA√á√ÉO FINAL - TESTES R√ÅPIDOS"

echo -e "${YELLOW}üß™ Executando testes r√°pidos...${NC}"
if go test -short ./...; then
    echo -e "${GREEN}‚úÖ Testes r√°pidos passaram${NC}"
else
    echo -e "${RED}‚ùå Alguns testes falharam${NC}"
fi

# Verificar cobertura
echo -e "\n${YELLOW}üìä Verificando cobertura de testes...${NC}"
if go test -short -coverprofile=coverage_quick.out ./... > /dev/null 2>&1; then
    coverage=$(go tool cover -func=coverage_quick.out | tail -1 | awk '{print $3}')
    echo -e "${GREEN}‚úÖ Cobertura atual: $coverage${NC}"
    rm -f coverage_quick.out
else
    echo -e "${YELLOW}‚ö†Ô∏è  N√£o foi poss√≠vel calcular cobertura${NC}"
fi

# Resumo final
print_header "RESUMO DA EXECU√á√ÉO"

echo -e "${CYAN}üìä Estat√≠sticas:${NC}"
echo -e "   ‚Ä¢ Total de exemplos executados: ${#examples_found[@]}"
echo -e "   ‚Ä¢ M√≥dulo compilado: ${GREEN}‚úÖ${NC}"
echo -e "   ‚Ä¢ Testes r√°pidos: ${GREEN}‚úÖ${NC}"

echo -e "\n${CYAN}üéØ Exemplos Principais:${NC}"
echo -e "   ${GREEN}‚úì${NC} B√°sico - Funcionalidades core"
echo -e "   ${GREEN}‚úì${NC} Otimizado - Zero allocation"
echo -e "   ${GREEN}‚úì${NC} Avan√ßado - VPN/Proxy/ASN detection"
echo -e "   ${GREEN}‚úì${NC} Mem√≥ria - Object pooling"
echo -e "   ${GREEN}‚úì${NC} Seguran√ßa - Valida√ß√£o avan√ßada"

echo -e "\n${CYAN}üîå Providers Suportados:${NC}"
for provider in "${providers[@]}"; do
    echo -e "   ${GREEN}‚úì${NC} $provider"
done

echo -e "\n${GREEN}üéâ EXECU√á√ÉO CONCLU√çDA COM SUCESSO!${NC}"
echo -e "${CYAN}üìö Para mais informa√ß√µes, consulte:${NC}"
echo -e "   ‚Ä¢ README.md"
echo -e "   ‚Ä¢ IMPLEMENTATION_SUMMARY.md"
echo -e "   ‚Ä¢ examples/README.md"

print_header "FIM DA EXECU√á√ÉO"
